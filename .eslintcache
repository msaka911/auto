[{"/Users/scarlet/Desktop/React/auto/src/index.js":"1","/Users/scarlet/Desktop/React/auto/src/App.js":"2","/Users/scarlet/Desktop/React/auto/src/pages/NotFound.js":"3","/Users/scarlet/Desktop/React/auto/src/pages/QuoteDetail.js":"4","/Users/scarlet/Desktop/React/auto/src/components/layout/Layout.js":"5","/Users/scarlet/Desktop/React/auto/src/components/quotes/QuoteForm.js":"6","/Users/scarlet/Desktop/React/auto/src/components/quotes/HighlightedQuote.js":"7","/Users/scarlet/Desktop/React/auto/src/components/quotes/QuoteList.js":"8","/Users/scarlet/Desktop/React/auto/src/lib/api.js":"9","/Users/scarlet/Desktop/React/auto/src/hooks/use-http.js":"10","/Users/scarlet/Desktop/React/auto/src/components/UI/LoadingSpinner.js":"11","/Users/scarlet/Desktop/React/auto/src/components/quotes/NoQuotesFound.js":"12","/Users/scarlet/Desktop/React/auto/src/components/layout/MainNavigation.js":"13","/Users/scarlet/Desktop/React/auto/src/components/UI/Card.js":"14","/Users/scarlet/Desktop/React/auto/src/components/quotes/QuoteItem.js":"15","/Users/scarlet/Desktop/React/auto/src/pages/MainPage.js":"16","/Users/scarlet/Desktop/React/auto/src/pages/Inventory.js":"17","/Users/scarlet/Desktop/React/auto/src/components/UI/Button.js":"18","/Users/scarlet/Desktop/React/auto/src/components/layout/Footer.js":"19","/Users/scarlet/Desktop/React/auto/src/pages/Form.js":"20","/Users/scarlet/Desktop/React/auto/src/pages/Sell.js":"21","/Users/scarlet/Desktop/React/auto/src/pages/Login.js":"22","/Users/scarlet/Desktop/React/auto/src/components/ProductItem.js":"23","/Users/scarlet/Desktop/React/auto/src/store/index.js":"24","/Users/scarlet/Desktop/React/auto/src/pages/Admin.js":"25","/Users/scarlet/Desktop/React/auto/src/store/store.js":"26"},{"size":699,"mtime":1650153881237,"results":"27","hashOfConfig":"28"},{"size":1084,"mtime":1650213337222,"results":"29","hashOfConfig":"28"},{"size":141,"mtime":1618555494000,"results":"30","hashOfConfig":"28"},{"size":1074,"mtime":1650123268586,"results":"31","hashOfConfig":"32"},{"size":361,"mtime":1650129184815,"results":"33","hashOfConfig":"28"},{"size":1716,"mtime":1650123054424,"results":"34","hashOfConfig":"32"},{"size":270,"mtime":1618555494000,"results":"35","hashOfConfig":"32"},{"size":1215,"mtime":1650123212347,"results":"36","hashOfConfig":"32"},{"size":2152,"mtime":1618555494000,"results":"37","hashOfConfig":"32"},{"size":1212,"mtime":1645471158462,"results":"38","hashOfConfig":"32"},{"size":167,"mtime":1618555494000,"results":"39","hashOfConfig":"28"},{"size":332,"mtime":1618555494000,"results":"40","hashOfConfig":"32"},{"size":1322,"mtime":1650496897037,"results":"41","hashOfConfig":"28"},{"size":426,"mtime":1650497860004,"results":"42","hashOfConfig":"28"},{"size":456,"mtime":1618555494000,"results":"43","hashOfConfig":"32"},{"size":2522,"mtime":1650499033142,"results":"44","hashOfConfig":"28"},{"size":3860,"mtime":1650406910704,"results":"45","hashOfConfig":"28"},{"size":176,"mtime":1650125877857,"results":"46","hashOfConfig":"28"},{"size":498,"mtime":1650138137920,"results":"47","hashOfConfig":"28"},{"size":6888,"mtime":1650379230050,"results":"48","hashOfConfig":"28"},{"size":83,"mtime":1650138009695,"results":"49","hashOfConfig":"28"},{"size":1757,"mtime":1650323459778,"results":"50","hashOfConfig":"28"},{"size":2550,"mtime":1650400732665,"results":"51","hashOfConfig":"28"},{"size":172,"mtime":1650153695864,"results":"52","hashOfConfig":"28"},{"size":4024,"mtime":1650378881309,"results":"53","hashOfConfig":"28"},{"size":758,"mtime":1650495896150,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"qjo53j",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1eyyb54",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/scarlet/Desktop/React/auto/src/index.js",[],["115","116"],"/Users/scarlet/Desktop/React/auto/src/App.js",[],"/Users/scarlet/Desktop/React/auto/src/pages/NotFound.js",[],"/Users/scarlet/Desktop/React/auto/src/pages/QuoteDetail.js",["117","118","119"],"import { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n",["120","121"],"/Users/scarlet/Desktop/React/auto/src/components/layout/Layout.js",[],"/Users/scarlet/Desktop/React/auto/src/components/quotes/QuoteForm.js",["122","123"],"import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","/Users/scarlet/Desktop/React/auto/src/components/quotes/HighlightedQuote.js",[],"/Users/scarlet/Desktop/React/auto/src/components/quotes/QuoteList.js",[],"/Users/scarlet/Desktop/React/auto/src/lib/api.js",[],"/Users/scarlet/Desktop/React/auto/src/hooks/use-http.js",[],"/Users/scarlet/Desktop/React/auto/src/components/UI/LoadingSpinner.js",[],"/Users/scarlet/Desktop/React/auto/src/components/quotes/NoQuotesFound.js",[],"/Users/scarlet/Desktop/React/auto/src/components/layout/MainNavigation.js",[],"/Users/scarlet/Desktop/React/auto/src/components/UI/Card.js",[],"/Users/scarlet/Desktop/React/auto/src/components/quotes/QuoteItem.js",[],"/Users/scarlet/Desktop/React/auto/src/pages/MainPage.js",["124","125","126","127","128","129"],"/Users/scarlet/Desktop/React/auto/src/pages/Inventory.js",["130","131","132","133"],"import ProductItem from '../components/ProductItem';\nimport classes from './Inventory.module.css';\nimport { useState,useEffect,useMemo} from 'react';\nimport { useAlert } from 'react-alert'\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\nimport { useSelector,useDispatch} from 'react-redux';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport { stateActions } from '../store/store';\nimport SearchInput, {createFilter} from 'react-search-input'\nimport { useLocation } from 'react-router-dom';\n\nconst axios = require('axios');\n\n\nconst Inventory = (props) => {\n  const location = useLocation()\n\n  const [searchTerm,setTerm]=useState(\"\");\n  const [reachCount,setCount]=useState(false)\n  const [focused,setFocus]=useState(false)\n  const [data,setData]=useState([])\n  const [filteredData,setFiltered]=useState([])\n\n  const alert=useAlert();\n  const dispatch=useDispatch()\n  const count=useSelector(state=>state.count)\n  const storedData=useSelector(state=>state.items)\n\n  \n  \n\n\nuseEffect(()=>{\n  if(!storedData){\n    axios.get('http://localhost:3001/realestate')\n    // axios.get('https://mybackend1.herokuapp.com/realestate')\n    .then(function (response) {\n      dispatch(stateActions.setItems(response.data),\n      setData(response.data),\n      console.log(\"hi\")\n      )})\n    .catch(function (error) {\n      alert.error(\"cannot load the page\")\n    })\n  }\n \n  },[])\n\nuseMemo(()=>{\n   if(count===storedData?.length){\n    setCount(true)\n  }\n},\n[storedData,count])\n\nuseEffect(() => {\n    // runs on location, i.e. route, change\n    dispatch(stateActions.reset())\n    setData(storedData)\n    // console.log('handle route change here', location)\n  }, [location])\n\n\nuseMemo(()=>{\n  if(focused){\n    setFiltered(Object.values(storedData)?.filter(obj=>obj.name.toLowerCase()?.includes(searchTerm.toLowerCase())))\n    if (filteredData?.length>6){\n      setFiltered(filteredData?.slice(0,6))\n    }\n    if(searchTerm.length===0){\n      setFiltered([])\n    }\n  }\n }\n,\n[searchTerm,focused])\n\n\nuseEffect(()=>{\n  if(storedData&&focused){\n    setData(storedData)\n  }\n},[storedData,focused])\n\n\n\nconst filtering=(id)=>{\n  const clickedItem=filteredData?.find((obj)=>obj._id===id)\n\n  setData([clickedItem])\n  const scroll=document.getElementById('scroll')\n  scroll.scrollIntoView({behavior:'smooth'})\n  setFocus(false)\n}\n\nreturn (\n    <Fragment>\n     <div className='centered' style={{display:reachCount?'none':'block'}}>\n              <LoadingSpinner />\n     </div>\n     <div style={{display:reachCount?'block':'none'}}>\n        <SearchInput className={classes.serachinput}  onFocus={()=>setFocus(true)} onChange={(input)=>setTerm(input)} />\n        {(focused&&filteredData.length>0)?(filteredData.map(items => {\n          return (\n            <div className= {classes.searchBar} key={items._id} onClick={()=>filtering(items._id)}> \n              <h5 >{items.name}</h5>\n              <img src={`data:image/jpeg;base64,${items.image1}`}  alt=\"Image1\"/>\n              {/* <h5 >{items.brand}</h5> */}\n              <h5 >${items.price}</h5>\n            </div>\n          )\n        })):((filteredData.length===0&&focused&&searchTerm)?<div className= {classes.noresult}><h5 >No result found</h5></div>:null)}\n      </div>\n     <section className={classes.products} style={{display:reachCount?'block':'none'}}>\n      <h2>Inventory</h2>\n        <ul id=\"scroll\">\n          {(data)?.map(product=><ProductItem\n            key={product._id}\n            id={product._id}\n            title={product.name}\n            price={product.price}\n            brand={product.brand}\n            mileage={product.mileage}\n            description={product.description}\n            image1={product.image1}\n            image2={product.image2}\n            image3={product.image3}\n          />)}\n        </ul>\n      </section>\n    </Fragment>\n           )\n};\n\nexport default Inventory;","/Users/scarlet/Desktop/React/auto/src/components/UI/Button.js",[],"/Users/scarlet/Desktop/React/auto/src/components/layout/Footer.js",[],"/Users/scarlet/Desktop/React/auto/src/pages/Form.js",["134","135","136","137","138","139","140","141"],"import { Fragment, useRef,useState } from 'react';\nimport { useAlert } from 'react-alert'\n\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\nimport DriveEtaIcon from '@mui/icons-material/DriveEta';\n\n\n\nimport classes from './Form.module.css';\nimport validator from 'validator';\n\nconst Form = (props) => {\n//------------options for select------------\n  const animatedComponents = makeAnimated();\n  const options = [\n    { value: 'basement', label: 'Basement' },\n    { value: 'window Wipe', label: 'Window Wipe' },\n    { value: 'carpet', label: 'Carpet' },\n    { value: 'electrial', label: 'Electrial Appliance' },\n    { value: 'other', label: 'Other' }\n  ]\n  const[selected,setSelect]=useState([]);\n\n\n\n//----------------------------------------\n\n  const alert = useAlert()\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const contactRef=useRef();\n  const addressRef=useRef();\n  const appointmentRef=useRef(\" \");\n  const distance=useRef(0);\n  const livingroom=useRef(0);\n  const otherOption=useRef(\"\");\n  const brand=useRef(\"\")\n  const year=useRef(\"\")\n\n\n  function submitFormHandler(event) { \n    event.preventDefault();\n    const axios = require('axios');\n    const enteredEmail = emailInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredContact=contactRef.current.value;\n    const enteredAddress=addressRef.current.value;\n    const enteredAppointment=appointmentRef.current.value;\n    const enteredDistance=distance.current.value;\n    const enteredLivingroom=livingroom.current.value;\n    const enteredOther=otherOption.current.value\n    const enteredBrand=brand.current.value\n    const enteredYear=year.current.value\n    //--------------check other option---------------------//\n    var other=\"\";\n    if(selected.find((select)=>\n    select.value===\"other\"\n  )){\n       if(!enteredOther){\n          document.getElementById('other').style.borderColor='red';\n          alert.error(\"Please enter value for other\",{onClose:()=>{\n          document.getElementById('other').style.borderColor='black';\n        }\n       })}\n       else{\n         other=enteredOther\n       }\n    }\n    //--------------check email, zip code, phone number---------------------//\n    if(!validator.isEmail(enteredEmail)){\n      document.getElementById('email').style.borderColor='red';\n      alert.error(\"Please enter valid email\",{onClose:()=>{\n        document.getElementById('email').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(!validator.isMobilePhone(enteredContact,['en-CA'])){\n      document.getElementById('contact').style.borderColor='red';\n      alert.error(\"Please enter valid phone number\",{onClose:()=>{\n        document.getElementById('contact').style.borderColor='black';\n        \n      }})\n      return\n    }\n    if(!validator.isPostalCode(enteredAddress,['CA'])){\n      document.getElementById('address').style.borderColor='red';\n      alert.error(\"Please enter valid zip code\",{onClose:()=>{\n        document.getElementById('address').style.borderColor='black';\n      }})\n      return\n    }\n\n    // if(validator.isMobilePhone(enteredContact,['en-CA'])&&validator.isEmail(enteredEmail)){\n    //     axios.post('https://mybackend1.herokuapp.com/appointment',{\n    //       email:enteredEmail,\n    //       name: enteredName,\n    //       contact:enteredContact,\n    //       address:enteredAddress,\n    //       mileage:enteredYear\n    //       selected:selected.map((item)=>\n    //         item.value)||null,\n    //       other:enteredOther||null,\n    //       Drivedistance:enteredDistance,\n    //       livingroom:enteredLivingroom||null,\n    //       appointment:enteredAppointment\n    //     })\n    //     .then(function (response) {\n    //     alert.show(\"Thanks! \\n We will process your request asap\")\n    //     document.getElementById('name').value=\"\";\n    //     document.getElementById('email').value=\"\";\n    //     document.getElementById('contact').value=\"\";\n    //     document.getElementById('address').value=\"\"\n    //     document.getElementById('appointment').value=\"\"\n    //     })\n    //     .catch(function (error) {\n    //       alert.error(\"cannot send the data\")\n    //     })\n    // }\n    // else{\n    //     alert.error(\"Please fill valid contents\")\n    // }\n  }\n\n\n  return (\n    <Fragment>\n      <div className={classes.card} clicked={props.clicked}>\n        <form\n          \n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='text' placeholder='Email' id='email' ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input type='text' placeholder='Name' id='name' ref={nameInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='contact'>Contact</label>\n            <input type='text' placeholder='Tel' id='contact' ref={contactRef} />\n          </div>\n          <div className={classes.control}>\n         <div className={classes.selection}>\n         <label><DriveEtaIcon/> Mileage\n         <input\n          type=\"number\"\n          min=\"0\"\n          ref={distance}\n            />\n         </label>\n         <label>Brand\n         <input\n          type=\"text\"\n          ref={brand}\n            />\n         </label>\n         <label>Manufactured Year\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"2050\"\n          ref={year}\n            />\n         </label>\n         </div>\n          <label htmlFor='select'>Selection for extra service</label>\n          <Select \n          // closeMenuOnSelect={false}\n          className={classes.control} \n          components={animatedComponents}\n          isMulti\n          onChange={options=>{setSelect(options)}}\n          options={options}/>\n          {selected.find((option)=>\n            option.value===\"other\")? <input className={classes.other} type='text' placeholder='Other' id='other' ref={otherOption} />:false}\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor='postal code'>Postal Code</label>\n            <input  className={classes.postal} type='text' placeholder='Zip Code' id='address' ref={addressRef} />\n            <label>*Extra charge may apply for remote area</label>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='appointment'>Vehicle Detail</label>\n            <textarea type='text' rows={3} placeholder='Detail' id='appointment' ref={appointmentRef} />\n          </div>\n          \n          <div className={classes.actions}>\n            <button onClick={submitFormHandler} className='btn'>Submit</button>\n          </div>\n          \n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Form;\n","/Users/scarlet/Desktop/React/auto/src/pages/Sell.js",[],"/Users/scarlet/Desktop/React/auto/src/pages/Login.js",[],"/Users/scarlet/Desktop/React/auto/src/components/ProductItem.js",["142"],"import classes from './ProductItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { stateActions } from '../store/store';\n\nimport React, {useState } from \"react\";\nimport Slider from \"react-slick\";\n\nimport 'slick-carousel/slick/slick.css';\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst ProductItem = (props) => {\n  const { title, price, description,image1,image2,image3,id,mileage} = props;\n  \n  const [nav1,setSlider1]=useState(\"\")\n  const [nav2,setSlider2]=useState(\"\")\n  \n  const dispatch=useDispatch();\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    fade: true,\n    autoplay: false,\n    \n  };\n\n\n\n\n  //---------adding active dots----------\n\n  return (\n    <li className={classes.item} key={id}>\n      <div className={classes.card}>\n        <header>\n          <div>\n          <h3 >{title}</h3>\n          <h5 >{mileage} KM</h5>\n          <h5 >hi</h5>\n          </div>\n          <div className={classes.price}>${parseInt(price)}</div>\n        </header>\n        <div className={classes.container}>\n      <Slider \n          {...settings} \n          asNavFor={nav2}\n          ref={slider => (setSlider1(slider))}>\n          <div>\n          <img src={`data:image/jpeg;base64,${image1}`} alt=\"Image1\" onLoad={()=>dispatch(stateActions.increament())}/>\n          </div>\n          <div>\n          <img src={`data:image/jpeg;base64,${image2}`}  alt=\"Image2\" onLoad={()=>dispatch(stateActions.increament())}/>\n          </div>\n          <div>\n          <img src={`data:image/jpeg;base64,${image3}`}  alt=\"Image3\"onLoad={()=>dispatch(stateActions.increament())}/>\n          </div>\n          </Slider>\n        <div className={classes.slider2}>\n        <Slider\n          asNavFor={nav1}\n          ref={slider => (setSlider2(slider))}\n          slidesToShow={2.99}\n          swipeToSlide={true}\n          focusOnSelect={true}\n          arrows={false}\n        >          \n        <div>\n        <img src={`data:image/jpeg;base64,${image1}`}  alt=\"Image1\"/>\n        </div>\n        <div>\n        <img src={`data:image/jpeg;base64,${image2}`}  alt=\"Image2\"/>\n        </div>\n        <div>\n        <img src={`data:image/jpeg;base64,${image3}`}  alt=\"Image3\"/>\n        </div>\n        </Slider>\n        </div>\n        </div>\n          <p>{description}</p>\n          \n          <div className={classes.actions}>\n        {/* <button onClick={adding}>Adding to quote cart</button> */}\n        </div>\n      </div>\n    </li>\n    \n  );\n};\n\nexport default ProductItem;","/Users/scarlet/Desktop/React/auto/src/store/index.js",[],"/Users/scarlet/Desktop/React/auto/src/pages/Admin.js",["143"],"import {useDispatch,useSelector} from \"react-redux\"\nimport { useAlert } from 'react-alert'\nimport classes from \"./Admin.module.css\"\nimport { Fragment } from \"react\"\nimport Button from \"../components/UI/Button\"\nimport { useRef} from \"react\"\nimport { stateActions } from \"../store/store\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst Admin=()=>{\n    const files=useRef(\"\")\n    const price=useRef(0)\n    const description=useRef(\"\");\n    const name=useRef(\"\");\n    const item=useRef(\"\");\n    const mileage=useRef(\"\")\n    const alert=useAlert();\n\n    const navigate=useNavigate();\n\n    const token=useSelector((state)=>state.token)\n\n   \n\n    const uploadFile=(event)=>{\n        event.preventDefault();\n        const axios = require('axios');\n        const formData = new FormData();\n        const file = files.current.files\n        formData.append('images',file)\n        \n        Array.from(file).forEach((element)=>{\n            formData.append('images',element)\n        })\n\n        formData.append('price',price.current.value)\n        formData.append('description',description.current.value)\n        formData.append('name',name.current.value)\n        formData.append('mileage',mileage.current.value)\n         \n      \n        const config = {\n            headers: { Authorization: `Bearer ${token}` }\n        };\n        \n        // axios.post('https://mybackend1.herokuapp.com/upload',\n        axios.post('http://localhost:3001/upload',\n          formData,\n          config\n        ).then((response)=>{\n            alert.show(\"Images successfully uploaded\")\n            name.current.value=\"\";\n            mileage.current.value=\"\";\n            description.current.value=\"\";\n            price.current.value=\"\";\n\n        }   \n        ).catch(function(error){\n            alert.error(error.response.data)\n        })\n    }\n\n    const deleteItem=(event)=>{\n        event.preventDefault();\n        const axios = require('axios');\n        const deletedItem=item.current.value\n        axios.post(`http://localhost:3001/deleteItem?name=${deletedItem}`,{},\n        // axios.post(`https://mybackend1.herokuapp.com/deleteItem?name=${deletedItem}`,{},\n\n        {headers: {Authorization: `Bearer ${token}`}}\n        ).then((response)=>{\n            alert.show(\"Item successfully deleted\")\n        }  \n        ).catch(function(error){\n            console.log(error)\n            alert.error(error.response.data.toString())\n        })\n    }\n    \n    const dispatch=useDispatch();\n    \n    const loggedin=useSelector((state)=>state.loggedin)\n    const logOut=(event)=>{\n        event.preventDefault();\n        \n        dispatch(stateActions.setState(false))\n        dispatch(stateActions.setToken(\"\"))\n        navigate('/login')\n    }\n    return(\n    <Fragment>\n        <form className={classes.card} onSubmit={uploadFile}>\n         <h3>Upload</h3>\n            <div className={classes.wrapper}>\n            <input type=\"file\" multiple ref={files}/>\n            <div>\n                <label>Price</label>\n                <input type=\"number\" min=\"0\" ref={price}/>\n            </div>\n            <div>\n                <label>Name</label>\n                <input type=\"text\" ref={name}/>\n            </div>\n            <div>\n                <label>Mileage</label>\n                <input type=\"number\" min=\"0\" ref={mileage}/>\n            </div>\n            <div>\n                <label>Description</label>\n                <textarea rows={3} type=\"text\"ref={description} />\n            </div>\n            </div>\n        <Button>Submit</Button>\n        </form>\n     <form className={classes.card} onSubmit={deleteItem}>\n            <h3>Delete inventory</h3>\n                <div className={classes.wrapper}>\n                   <div>\n                       <label>Name</label>\n                       <input type=\"text\" ref={item}/>\n                   </div>\n                </div>\n        <Button>Submit</Button>\n    </form>\n\n    <Button className={classes.logout} onClick={logOut}>Log Out</Button>\n    </Fragment>\n    )\n}\n\n\nexport default Admin;","/Users/scarlet/Desktop/React/auto/src/store/store.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":21,"nodeType":"150","messageId":"151","endLine":2,"endColumn":26},{"ruleId":"148","severity":1,"message":"152","line":2,"column":28,"nodeType":"150","messageId":"151","endLine":2,"endColumn":32},{"ruleId":"148","severity":1,"message":"153","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"144","replacedBy":"154"},{"ruleId":"146","replacedBy":"155"},{"ruleId":"148","severity":1,"message":"156","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"157","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":20},{"ruleId":"148","severity":1,"message":"158","line":1,"column":21,"nodeType":"150","messageId":"151","endLine":1,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":38,"column":5,"nodeType":"161","endLine":38,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":43,"column":7,"nodeType":"161","endLine":43,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":46,"column":5,"nodeType":"161","endLine":46,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":49,"column":5,"nodeType":"161","endLine":49,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":62,"column":3,"nodeType":"161","endLine":62,"endColumn":21},{"ruleId":"148","severity":1,"message":"162","line":9,"column":22,"nodeType":"150","messageId":"151","endLine":9,"endColumn":34},{"ruleId":"163","severity":1,"message":"164","line":47,"column":5,"nodeType":"165","endLine":47,"endColumn":7,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":61,"column":6,"nodeType":"165","endLine":61,"endColumn":16,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"169","line":76,"column":1,"nodeType":"165","endLine":76,"endColumn":21,"suggestions":"170"},{"ruleId":"148","severity":1,"message":"171","line":44,"column":11,"nodeType":"150","messageId":"151","endLine":44,"endColumn":16},{"ruleId":"148","severity":1,"message":"172","line":46,"column":11,"nodeType":"150","messageId":"151","endLine":46,"endColumn":22},{"ruleId":"148","severity":1,"message":"173","line":49,"column":11,"nodeType":"150","messageId":"151","endLine":49,"endColumn":29},{"ruleId":"148","severity":1,"message":"174","line":50,"column":11,"nodeType":"150","messageId":"151","endLine":50,"endColumn":26},{"ruleId":"148","severity":1,"message":"175","line":51,"column":11,"nodeType":"150","messageId":"151","endLine":51,"endColumn":28},{"ruleId":"148","severity":1,"message":"176","line":53,"column":11,"nodeType":"150","messageId":"151","endLine":53,"endColumn":23},{"ruleId":"148","severity":1,"message":"177","line":54,"column":11,"nodeType":"150","messageId":"151","endLine":54,"endColumn":22},{"ruleId":"148","severity":1,"message":"178","line":67,"column":10,"nodeType":"150","messageId":"151","endLine":67,"endColumn":15},{"ruleId":"148","severity":1,"message":"179","line":2,"column":23,"nodeType":"150","messageId":"151","endLine":2,"endColumn":34},{"ruleId":"148","severity":1,"message":"180","line":82,"column":11,"nodeType":"150","messageId":"151","endLine":82,"endColumn":19},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Comments' is defined but never used.",["181"],["182"],"'Prompt' is defined but never used.","'isEntering' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createFilter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alert', 'dispatch', and 'storedData'. Either include them or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has missing dependencies: 'dispatch' and 'storedData'. Either include them or remove the dependency array.",["184"],"React Hook useMemo has missing dependencies: 'filteredData' and 'storedData'. Either include them or remove the dependency array. You can also do a functional update 'setFiltered(f => ...)' if you only need 'filteredData' in the 'setFiltered' call.",["185"],"'axios' is assigned a value but never used.","'enteredName' is assigned a value but never used.","'enteredAppointment' is assigned a value but never used.","'enteredDistance' is assigned a value but never used.","'enteredLivingroom' is assigned a value but never used.","'enteredBrand' is assigned a value but never used.","'enteredYear' is assigned a value but never used.","'other' is assigned a value but never used.","'useSelector' is defined but never used.","'loggedin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [alert, dispatch, storedData]",{"range":"192","text":"193"},"Update the dependencies array to be: [dispatch, location, storedData]",{"range":"194","text":"195"},"Update the dependencies array to be: [focused, storedData, filteredData, searchTerm]",{"range":"196","text":"197"},[1386,1388],"[alert, dispatch, storedData]",[1670,1680],"[dispatch, location, storedData]",[1980,2000],"[focused, storedData, filteredData, searchTerm]"]